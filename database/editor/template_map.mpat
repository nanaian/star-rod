
#new:Header $Header {
	[MainScript]  $Script_Main 
	[EntryList]   $EntryList
	[Background]  80200000 
	[MapTattle]   $Function_GetTattle 
}

#new:EntryList $EntryList {
~Vec4f:entry_w
~Vec4f:entry_e
~Vec4f:entry_n
~Vec4f:entry_s
}

#new:Function $Function_GetTattle {
	ADDIU     SP, SP, FFE8
	LIO       V0, $MapTattle
	JR        RA
	ADDIU     SP, SP, 18
}

% UPDATE THIS
#string $MapTattle {
[STYLE:TATTLE][Func_2B][...]
Uh-oh, looks like whoever made
this map forgot to add a tattle!
[WAIT][END]
}

% By default, this map uses $NAME_shape for its geometry, $NAME_hit for
% its collision and $NAME_tex for its textures. We can substitute others in
% the init function. In this case, we're using the textures from Dry Dry
% Desert instead of the default.
#new:Function_Init $Function_Init {
	PUSH	RA
	/%
	% Override map geometry
	LIA       A0, 800D9230
	LIA       A1, "$NAME_shape"
	JAL       ~Func:sprintf
	RESERVED
	% Override map collision
	LIA       A0, 800D91E0
	LIA       A1, "$NAME_hit"
	JAL       ~Func:sprintf
	RESERVED
	%/
	% Override texture package
	LIA		A0, 800B0CF0
	LIA		A1, "kmr_tex"
	JAL		~Func:sprintf
	RESERVED
	% Done
	DADDU	V0, R0, R0
	JPOP	RA
}

#new:Script_Main $Script_Main {
	Set		*WorldMapLocation	.Location:GoombaRoad			% sets the location on the pause screen map
	Call	SetSpriteShading 	( FFFFFFFF )
	% default amera type, half vertical FOV, near clip, and far clip
	Call	SetCamPerspective	( .Cam:Default  3  25` 16` 4096` )	
	% color values are RGB bytes; (0,0,0) is black, (255`,255`,255`) is white, etc.
	Call	SetCamBGColor   	( .Cam:Default  0  0  0 )
	Call	SetCamEnabled       ( .Cam:Default  .True )
	Call	SetCamLeadPlayer    ( .Cam:Default  .False )
	Call	SetMusicTrack    	( 00000000 .Song:PleasantPath 00000000 00000008 )
%	Call	MakeNpcs			( 00000000 $NpcGroupList )
	ExecWait $Script_MakeEntities 
	Set		*Var[0] $Script_MakeExits 
	Exec	EnterWalk 
	Return
	End
}

#new:Script $Script_MakeEntities {
	Return
	End
}
	
#new:Script $Script_MakeExits {
	Bind	$Script_ExitN .Trigger:FloorAbove ~Collider:exit_trigger_n 00000001 00000000
	Bind	$Script_ExitE .Trigger:FloorAbove ~Collider:exit_trigger_e 00000001 00000000
	Bind	$Script_ExitS .Trigger:FloorAbove ~Collider:exit_trigger_s 00000001 00000000 		
	Bind	$Script_ExitW .Trigger:FloorAbove ~Collider:exit_trigger_w 00000001 00000000 
	Return
	End
}

#new:Script $Script_ExitW {
	SetGroup 0000001B 
	Call	UseExitHeading	( 60` ~Entry:entry_w )
	Exec	ExitWalk 
	Call	GotoMap			( "mac_01" 00000000 )
	Wait	100` 
	Return
	End
}

#new:Script $Script_ExitE {
	SetGroup 0000001B 
	Call	UseExitHeading	( 60` ~Entry:entry_e )
	Exec	ExitWalk 
	Call	GotoMap			( "nok_01" 00000000 )
	Wait	100` 
	Return
	End
}

#new:Script $Script_ExitN {
	SetGroup 0000001B 
	Call	UseExitHeading	( 60` ~Entry:entry_n )
	Exec	ExitWalk 
	Call	GotoMap			( "kmr_01" 00000000 )
	Wait	100` 
	Return
	End
}

#new:Script $Script_ExitS {
	SetGroup 0000001B 
	Call	UseExitHeading	( 60` ~Entry:entry_s )
	Exec	ExitWalk
	Call	GotoMap			( "dro_01" 00000000 )
	Wait	100` 
	Return
	End
}
